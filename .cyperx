{
    "raw": [
        {
            "CYPERX": "Welcome MC DESMOND?"
        },
        {
            "USER": "add, commit and push , cd into my repo directory: C:\\Users\\MC DESMOND\\dextop\\Kavari\\frontend\\src\\addons"
        },
        {
            "SYSTEM": "<GIT_DIFF>diff --git a/HOC.tsx b/HOC.tsx\nindex 4d60fc0..e8a9829 100644\n--- a/HOC.tsx\n+++ b/HOC.tsx\n@@ -1,9 +1,9 @@\n \"use client\"\n-import React, {FC, useEffect, useState} from \"react\"\n+import React, { FC, useEffect, useState } from \"react\"\n import { CompileStyle, FCssHelper, ICssHelper, styleKeys } from \"./css\"\n import { BaseElementProps, Div, Hidden, Input, TextArea } from \"./csml\"\n-import {__all__, dict, ReplaceAll, useStateUpdate} from \"./anys\";\n-import {ListChildren} from \"./anys\";\n+import { __all__, dict, ReplaceAll, useStateUpdate } from \"./anys\";\n+import { ListChildren } from \"./anys\";\n import { ObjectEvent } from \"./ObjectEvent\";\n import IObserver from \"./IObserver\";\n import DataSaver from \"./DataSaver\";\n@@ -41,454 +41,493 @@ import CWind from \"./cwind\";\n \n const ROOTDATA_IDENTIFIER = \"BASEHOC|__root-data__\"\n const ROOTLNR_IDENTIFIER = \"BASEHOC|__root-listener__\"\n-export default class BaseHOC<CustomProps = {},ElementInterface = HTMLDivElement>{\n-    \n-    protected ref:React.RefObject<ElementInterface> | React.MutableRefObject<undefined> | React.RefObject<null>\n+export default class BaseHOC<CustomProps = {}, ElementInterface = HTMLDivElement> {\n+\n+    protected ref: React.RefObject<ElementInterface> | React.MutableRefObject<undefined> | React.RefObject<null>\n     public style\n-    public medias:dict<AtMedia> = {}\n-    private variables:dict = {}\n+    protected medias: dict<AtMedia> = {}\n+    private variables: dict = {}\n     public remote\n-    public Addons:dict<any[]> = {}\n-    public cnio:IObserver\n+    public Addons: dict<any[]> = {}\n+    public cnio: IObserver\n+    public hovering = false\n+    protected _hover:(..._any:any[])=>void = ()=>{}\n     protected _hasRendered = false\n     protected Component\n-    protected forceUpdate?:Function\n-    protected setAddons:any\n-    protected setAddonProps:any\n-    protected addonProps:dict = {}\n+    protected forceUpdate?: Function\n+    protected setAddons: any\n+    protected setAddonProps: any\n+    protected addonProps: dict = {}\n     protected ConstTypeName = \"-Const\"\n     protected onChangeTypeName = \"-ChangeFunc\"\n     protected EventControl = new ObjectEvent()\n     protected clientLoaded = \"CLIENT-LOADED\"\n     protected _onStyleChangeEvent = new ObjectEvent()\n-    protected props:BaseElementProps<ElementInterface> = {}\n-    protected _rootData = new DataSaver(ROOTDATA_IDENTIFIER,undefined)\n-    protected _rootStorage = new DataSaver(ROOTDATA_IDENTIFIER,undefined,\"localStorage\")\n+    protected props: BaseElementProps<ElementInterface> = {}\n+    protected _rootData = new DataSaver(ROOTDATA_IDENTIFIER, undefined)\n+    protected _rootStorage = new DataSaver(ROOTDATA_IDENTIFIER, undefined, \"localStorage\")\n     protected _rootListener = new XListener(ROOTLNR_IDENTIFIER)\n     _\n     $\n-    onStyleChange(styleKey:styleKeys,func:Function){\n-        this._onStyleChangeEvent.on(styleKey,func)\n+    onStyleChange(styleKey: styleKeys, func: Function) {\n+        this._onStyleChangeEvent.on(styleKey, func)\n     }\n-\n-    ClearStyleChangeEvent(styleKey:styleKeys){\n+    get media_access() {\n+        return this.medias\n+    }\n+    ClearStyleChangeEvent(styleKey: styleKeys) {\n         this._onStyleChangeEvent.events[styleKey] = []\n     }\n \n-   get access(){\n+    get access() {\n         return this.variables\n     }\n \n-    get rootdata(){\n+    get rootdata() {\n         return this._rootData\n     }\n-    get storage(){\n+    get storage() {\n         return this._rootStorage\n     }\n \n-    SetVariable(name:string, value?: any,onChange?:(name?:string,val?:any)=>void){\n-        let key = ReplaceAll(name, this.ConstTypeName,\"\")\n-        key = ReplaceAll(key, this.onChangeTypeName,\"\")\n-        if (!this.variables[key+this.ConstTypeName]) {\n-            if (!(onChange == undefined)){\n-                this.variables[key+this.onChangeTypeName] = onChange\n-            }else if (!this.variables[key+this.onChangeTypeName]){\n-                this.variables[key+this.onChangeTypeName] = (_name?:string,_val?:any)=>{}\n+    SetVariable(name: string, value?: any, onChange?: (name?: string, val?: any) => void) {\n+        let key = ReplaceAll(name, this.ConstTypeName, \"\")\n+        key = ReplaceAll(key, this.onChangeTypeName, \"\")\n+        if (!this.variables[key + this.ConstTypeName]) {\n+            if (!(onChange == undefined)) {\n+                this.variables[key + this.onChangeTypeName] = onChange\n+            } else if (!this.variables[key + this.onChangeTypeName]) {\n+                this.variables[key + this.onChangeTypeName] = (_name?: string, _val?: any) => { }\n             }\n-            if (!(value == undefined)){\n-                if (this.variables[key]){\n-                    this.variables[key+this.onChangeTypeName](key,value)\n+            if (!(value == undefined)) {\n+                if (this.variables[key]) {\n+                    this.variables[key + this.onChangeTypeName](key, value)\n                 }\n                 this.variables[key] = value\n-                \n+\n             }\n-        }else{\n-            console.log(\"tried assigning to a const variable: \",this.variables[key],\" with value:\",value)\n+        } else {\n+            console.log(\"tried assigning to a const variable: \", this.variables[key], \" with value:\", value)\n         }\n     }\n \n-    set(name:string, value?: any,onChange?:(name?:string,val?:any)=>void){\n-        this.SetVariable(name,value,onChange)\n+    set(name: string, value?: any, onChange?: (name?: string, val?: any) => void) {\n+        this.SetVariable(name, value, onChange)\n     }\n \n-    hasVariable(name:string){\n+    hasVariable(name: string) {\n         return this.GetVariable(name) != undefined\n     }\n \n-    has(name:string){\n+    has(name: string) {\n         return this.hasVariable(name)\n     }\n \n-    get rootListener(){\n+    get rootListener() {\n         return this._rootListener\n     }\n-    \n-    Listen(key:string, func:(e:XEvent)=>void,lid?:string){\n-        this._rootListener.Listen(key,func,lid)\n+\n+    Listen(key: string, func: (e: XEvent) => void, lid?: string) {\n+        this._rootListener.Listen(key, func, lid)\n     }\n-    Announce(key:string,xevent:XEvent){\n-        this._rootListener.Announce(key,xevent)\n+    Announce(key: string, xevent: XEvent) {\n+        this._rootListener.Announce(key, xevent)\n     }\n-    Distract(key:string){\n+    Distract(key: string) {\n         this._rootListener.Distract(key)\n     }\n-    \n-    ConstVariable(name:string, value: any){\n-            let key = ReplaceAll(name, this.ConstTypeName,\"\")\n-            key = ReplaceAll(key, this.onChangeTypeName,\"\")\n-        if (!this.variables[key+this.ConstTypeName]) {\n+\n+    ConstVariable(name: string, value: any) {\n+        let key = ReplaceAll(name, this.ConstTypeName, \"\")\n+        key = ReplaceAll(key, this.onChangeTypeName, \"\")\n+        if (!this.variables[key + this.ConstTypeName]) {\n             this.variables[key] = value\n-            this.variables[key+this.ConstTypeName] = true\n-        }else{\n-            console.log(\"tried assigning to a const variable: \",this.variables[key],\" with value:\",value)\n+            this.variables[key + this.ConstTypeName] = true\n+        } else {\n+            console.log(\"tried assigning to a const variable: \", this.variables[key], \" with value:\", value)\n         }\n-        \n+\n     }\n \n-    GetVariable(name:string) {\n+    GetVariable(name: string) {\n         // let key = ReplaceAll(name, this.ConstTypeName,\"\")        \n         return this.variables[name]\n     }\n-    get(name:string){\n+    get(name: string) {\n         return this.GetVariable(name)\n     }\n \n-    GetVariableType(name:string) {\n+    GetVariableType(name: string) {\n         // let key = ReplaceAll(name, this.ConstTypeName,\"\") \n         return typeof (this.variables[name])\n     }\n \n-    IsVariableConst(name:string){\n-        let key = ReplaceAll(name, this.ConstTypeName,\"\") \n-        return this.variables[key+this.ConstTypeName]\n+    IsVariableConst(name: string) {\n+        let key = ReplaceAll(name, this.ConstTypeName, \"\")\n+        return this.variables[key + this.ConstTypeName]\n     }\n \n-    GetAllVariables(){\n+    GetAllVariables() {\n         return this.variables\n     }\n \n-    Update(){\n-        if (this.forceUpdate){\n+    Update() {\n+        if (this.forceUpdate) {\n             this.forceUpdate()\n         }\n     }\n-   \n \n-    constructor ({Component = Div,remote, refee = React.useRef(null),props = {} }:{Component?:FC ,remote?:Function,props?:BaseElementProps<ElementInterface>,refee?:React.RefObject<ElementInterface> | React.MutableRefObject<undefined> | React.RefObject<null>} = {}){\n+\n+    constructor({ Component = Div, remote, refee = React.useRef(null), props = {} }: { Component?: FC, remote?: Function, props?: BaseElementProps<ElementInterface>, refee?: React.RefObject<ElementInterface> | React.MutableRefObject<undefined> | React.RefObject<null> } = {}) {\n         this.ref = refee\n         this.remote = remote\n-        this.style = {...FCssHelper,addStyle:(_styleDict:ICssHelper)=>{}}\n+        this.style = { ...FCssHelper, addStyle: (_styleDict: ICssHelper) => { } }\n         this.Component = this.InitComponent(Component)\n         this.EffectifyStyle()\n         this.cnio = new IObserver()\n         this.props = props\n-        \n         this._ = this.Render\n         this.$ = this.ToRender\n \n     }\n \n-    protected InitComponent(Component:FC){\n+    protected InitComponent(Component: FC) {\n         return Component\n     }\n \n-    IObserve({styleIn = {},styleOut,classIn,classOut,styleInTransition}:{styleInTransition?:string, styleIn?:ICssHelper,styleOut?:ICssHelper,classIn?:string,classOut?:string} = {}){\n-        if (styleInTransition){\n+    IObserve({ styleIn = {}, styleOut, classIn, classOut, styleInTransition }: { styleInTransition?: string, styleIn?: ICssHelper, styleOut?: ICssHelper, classIn?: string, classOut?: string } = {}) {\n+        if (styleInTransition) {\n             const trans = this.style.transition()\n             // console.log(trans)\n-            this.style.transition(trans+(trans.trim() == \"\"?\"\":\", \")+CWind.TransitionMerge(Object.keys(styleIn),styleInTransition).transition)\n+            this.style.transition(trans + (trans.trim() == \"\" ? \"\" : \", \") + CWind.TransitionMerge(Object.keys(styleIn), styleInTransition).transition)\n         }\n-        this.cnio.init({styleIn,styleOut,classIn,classOut})\n-        if (this.Element){\n+        this.cnio.init({ styleIn, styleOut, classIn, classOut })\n+        if (this.Element) {\n             this.cnio.Observe(this.Element as any)\n         }\n     }\n \n-    UnObserve(){\n+    UnObserve() {\n         this.cnio.UnObserve(this.Element as any)\n     }\n \n-    AddMedia(id:string,{media = (\"max-width\" as string | string[]),mediaElementFunc = ()=>window ,styleon = ({} as ICssHelper),styleoff = ({} as ICssHelper),pixels = (800 as number | number[]),onMedia = (_HOC:BaseHOC) => {},offMedia = (_HOC:BaseHOC) => {}} ={}){\n-        const Media = new AtMedia(this as any,{media,mediaElementFunc,styleon,styleoff,onMedia,offMedia,pixels})\n+    AddMedia(id: string, { media = (\"max-width\" as string | string[]), mediaElementFunc = () => window, styleon = ({} as ICssHelper), styleoff = ({} as ICssHelper), pixels = (800 as number | number[]), onMedia = (_HOC: BaseHOC|undefined) => { }, offMedia = (_HOC: BaseHOC|undefined) => { } } = {}) {\n+        const Media = new AtMedia(this as any, { media, mediaElementFunc, styleon, styleoff, onMedia, offMedia, pixels })\n         this.medias = {\n             ...this.medias,\n-            [id]:Media\n+            [id]: Media\n         }\n         Media.Activate()\n     }\n-    DestroyMedia(id:string){\n-        if (this.medias[id]){\n+    DestroyMedia(id: string) {\n+        if (this.medias[id]) {\n             this.medias[id].Destroy()\n         }\n     }\n-    PauseMedia(id:string){\n-        if (this.medias[id]){\n+    PauseMedia(id: string) {\n+        if (this.medias[id]) {\n             this.medias[id].Pause()\n         }\n     }\n-    ContinueMedia(id:string){\n-        if (this.medias[id]){\n+    ContinueMedia(id: string) {\n+        if (this.medias[id]) {\n             this.medias[id].Continue()\n         }\n     }\n-    get Element():ElementInterface | undefined|null{\n+    get Element(): ElementInterface | undefined | null {\n         if (this.remote) {\n             return this.remote()\n-        }else{\n-            return this.ref.current \n+        } else {\n+            return this.ref.current\n         }\n     }\n-    innerText (val?:any){\n-        if (this.Element){\n-            if (val){\n+    innerText(val?: any) {\n+        if (this.Element) {\n+            if (val) {\n                 (this.Element as any).innerText = val\n             }\n-            else{\n+            else {\n                 return (this.Element as any).innerText\n             }\n         }\n         return \"\"\n     }\n-    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, _options?: boolean | AddEventListenerOptions){\n-        this.AtWindow(()=>{\n-            (this.Element as any).addEventListener(type,listener)\n+    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, _options?: boolean | AddEventListenerOptions) {\n+        this.AtWindow(() => {\n+            (this.Element as any).addEventListener(type, listener)\n         })\n     }\n \n-    set onenter(func:Function){\n-        this.AtWindow(()=>{(this.Element as any).onmouseenter = func})\n+    set onenter(func: Function) {\n+        this.AtWindow(() => {\n+             (this.Element as any).onmouseenter = (e:any)=>{\n+                this.hovering = true\n+                this._hover(e)\n+                func(e)} \n+            })\n     }\n-    set onleave(func:Function){\n-        this.AtWindow(()=>{(this.Element as any).onmouseleave = func})\n+\n+    set hover(func:(...any:any[])=>void){\n+        this._hover = func\n+        this.onenter = (()=>{})\n+        this.onleave = (()=>{})\n     }\n-    set onfocus(func:Function){\n-        this.AtWindow(()=>{(this.Element as any).onfocus = func})\n+\n+    set onleave(func: Function) {\n+        this.AtWindow(() => {\n+             (this.Element as any).onmouseleave = (e:any)=>{\n+                this.hovering = false\n+                this._hover(e)\n+                func(e)} \n+            })\n+    }\n+    set onfocus(func: Function) {\n+        this.AtWindow(() => {\n+             (this.Element as any).onfocus = (e:any)=>{\n+                \n+                func(e)} \n+            })\n     }\n-    Focus(){\n-        this.AtWindow(()=>{(this.Element as any).focus()})\n+    Focus() {\n+        this.AtWindow(() => { (this.Element as any).focus() })\n     }\n \n-    AtWindow(Func:Function){\n-        if (this.Element){\n+    AtWindow(Func: Function) {\n+        if (this.Element) {\n             Func()\n-        }else{\n-            this.EventControl.on(this.clientLoaded,Func)\n+        } else {\n+            this.EventControl.on(this.clientLoaded, Func)\n         }\n-        \n+\n     }\n \n-    innerHTML (val?:any,style?:ICssHelper){\n-        if (this.Element){\n-            if (val){\n-                if (style){\n+    innerHTML(val?: any, style?: ICssHelper) {\n+        if (this.Element) {\n+            if (val) {\n+                if (style) {\n                     val = `<span style = \"${CompileStyle(style)}\">${val}</span>`\n                 }\n                 (this.Element as any).innerHTML = val\n             }\n-            else{\n+            else {\n                 return (this.Element as any).innerHTML\n             }\n         }\n         return \"\"\n     }\n \n-    protected EffectifyStyle(){\n-        for ( const key of Object.keys(FCssHelper)){\n-            this.style = {...this.style,[key]:(value?:string)=>{\n-                const element = this.Element\n-                    if (element){\n+    protected EffectifyStyle() {\n+        for (const key of Object.keys(FCssHelper)) {\n+            this.style = {\n+                ...this.style, [key]: (value?: string) => {\n+                    const element = this.Element\n+                    if (element) {\n                         if (value) {\n                             (element as any).style[key] = value\n-                            if (Object.keys(this._onStyleChangeEvent.events).includes(key)){ \n-                                this._onStyleChangeEvent.emit(key,value)}\n+                            if (Object.keys(this._onStyleChangeEvent.events).includes(key)) {\n+                                this._onStyleChangeEvent.emit(key, value)\n                             }\n-                        else{\n-                        return (element as any).style[key]\n+                        }\n+                        else {\n+                            return (element as any).style[key]\n                         }\n                     }\n-                \n-            }}\n+\n+                }\n+            }\n         }\n-        this.style.addStyle = (styleDict)=>{\n-            for(var key in styleDict){\n+        this.style.addStyle = (styleDict) => {\n+            for (var key in styleDict) {\n                 (this.style as any)[key]((styleDict as dict)[key])\n             }\n         }\n     }\n \n-     public Execute(func = (_ele:ElementInterface)=>{}){\n-        const element =this.Element\n-        if (element){\n+    public Execute(func = (_ele: ElementInterface) => { }) {\n+        const element = this.Element\n+        if (element) {\n             func(element)\n         }\n     }\n-    public get hasRendered(){\n+    public get hasRendered() {\n         return this._hasRendered\n     }\n \n \n-    ToRender = ({children,renderId ,...props}:BaseElementProps<ElementInterface> & {renderId:any}) => {\n-        this.setAddons((e:any)=>{return {...e,[renderId]:ListChildren(children)}})\n-        \n-        this.setAddonProps((p:any)=> {\n-            return{...props,...p} \n+    ToRender = ({ children, renderId, ...props }: BaseElementProps<ElementInterface> & { renderId: any }) => {\n+        this.setAddons((e: any) => { return { ...e, [renderId]: ListChildren(children) } })\n+\n+        this.setAddonProps((p: any) => {\n+            return { ...props, ...p }\n         })\n \n         return <Hidden></Hidden>\n     }\n \n-    Render =(props:BaseElementProps<ElementInterface>& CustomProps) =>{\n-            this.forceUpdate = useStateUpdate()\n-            const addonsState = useState({})\n-            this.Addons = addonsState[0]\n-            this.setAddons = addonsState[1]\n-            const addonPropsState = useState([])\n-            this.addonProps = addonPropsState[0]\n-            this.setAddonProps = addonPropsState[1]\n-            this._hasRendered = true\n-            useEffect(()=>{\n-                this.EventControl.emit(this.clientLoaded)\n-            })\n-            return <this.Component Ref = {this.ref} {...this.props} {...props} {...this.addonProps} >\n-                {props.children}\n-                {Object.values(this.Addons)}\n-            </this.Component>\n+    Render = (props: BaseElementProps<ElementInterface> & CustomProps) => {\n+        this.forceUpdate = useStateUpdate()\n+        const addonsState = useState({})\n+        this.Addons = addonsState[0]\n+        this.setAddons = addonsState[1]\n+        const addonPropsState = useState([])\n+        this.addonProps = addonPropsState[0]\n+        this.setAddonProps = addonPropsState[1]\n+        this._hasRendered = true\n+        useEffect(() => {\n+            this.EventControl.emit(this.clientLoaded)\n+        })\n+        return <this.Component Ref={this.ref} {...this.props} {...props} {...this.addonProps} >\n+            {props.children}\n+            {Object.values(this.Addons)}\n+        </this.Component>\n     }\n }\n-type RT<T> =  T \n-export class SpiritHOC<CustomProps = RT<{}> ,ElementInterface = HTMLDivElement>{\n-    component:FC\n-    soulprops:BaseElementProps<ElementInterface> & CustomProps\n-    protected bodys:dict<BaseHOC<{},ElementInterface>> = {}\n+type RT<T> = T\n+export class SpiritHOC<CustomProps = RT<{}>, ElementInterface = HTMLDivElement> {\n+    component: FC\n+    soulprops: BaseElementProps<ElementInterface> & CustomProps\n+    protected bodys: dict<BaseHOC<{}, ElementInterface>> = {}\n     HOCClass\n-    constructor ({Component=Div as FC<any>,soulprops=({} as BaseElementProps<ElementInterface> & CustomProps),HOCClass = BaseHOC} = {}){\n+    constructor({ Component = Div as FC<any>, soulprops = ({} as BaseElementProps<ElementInterface> & CustomProps), HOCClass = BaseHOC } = {}) {\n         this.component = Component\n-        this.soulprops = soulprops \n+        this.soulprops = soulprops\n         this.HOCClass = this.initHOC(HOCClass)\n     }\n \n-    protected initHOC(HOC:typeof BaseHOC){\n-        return HOC \n+    protected initHOC(HOC: typeof BaseHOC) {\n+        return HOC\n     }\n \n-     GetSoulBySoulId(soulId:string):BaseHOC<{},ElementInterface>{ \n-        return this.bodys[soulId] \n+    GetSoulBySoulId(soulId: string): BaseHOC<{}, ElementInterface> {\n+        return this.bodys[soulId]\n     }\n \n-    get living(){\n+    get living() {\n         return this.bodys\n     }\n-    get livingNamesList(){\n+    get livingNamesList() {\n         return Object.keys(this.bodys)\n     }\n-    forEachLiving(mapFunc:(body:BaseHOC<{},ElementInterface>,name:string)=>void){\n-        for(let name of this.livingNamesList){\n-                mapFunc(this.GetSoulBySoulId(name),name)\n+    forEachLiving(mapFunc: (body: BaseHOC<{}, ElementInterface>, name: string) => void) {\n+        for (let name of this.livingNamesList) {\n+            mapFunc(this.GetSoulBySoulId(name), name)\n         }\n     }\n-    CreateSoul({soulId,...addSoulprops}:BaseElementProps<ElementInterface>  & {soulId?:string} & CustomProps = {} as any){\n-        const soul = (props:BaseElementProps<ElementInterface> & CustomProps)=>{\n+    CreateSoul({ soulId, ...addSoulprops }: BaseElementProps<ElementInterface> & { soulId?: string } & CustomProps = {} as any) {\n+        const soul = (props: BaseElementProps<ElementInterface> & CustomProps) => {\n             return <this.component {...this.soulprops} {...addSoulprops} {...props}>{props.children}</this.component>\n         }\n-        const body = new this.HOCClass<CustomProps,ElementInterface>({Component:soul as any})\n-        if (soulId){\n+        const body = new this.HOCClass<CustomProps, ElementInterface>({ Component: soul as any })\n+        if (soulId) {\n             this.bodys[soulId] = body as any\n         }\n         return body\n     }\n \n-    RenderSoul = ({soulId,...props}:BaseElementProps<ElementInterface> & dict & {soulId?:string} )=>{\n-        const body = new this.HOCClass<CustomProps,ElementInterface>({Component:this.component as any})\n-        if (soulId){\n-            this.bodys[soulId] = body as any \n+    RenderSoul = ({ soulId, ...props }: BaseElementProps<ElementInterface> & dict & { soulId?: string }) => {\n+        const body = new this.HOCClass<CustomProps, ElementInterface>({ Component: this.component as any })\n+        if (soulId) {\n+            this.bodys[soulId] = body as any\n         }\n         return <body.Render {...this.soulprops as any} {...props as any}>{props.children}</body.Render>\n     }\n }\n \n \n-export class AtMedia{\n+export class AtMedia {\n     isDestroyed: boolean = false\n     isPaused: boolean = false\n-    media:string[] = [\"max-width\"]\n-    pixels:number[] = [800]\n-    interval:any\n-    mediaElementFunc = ()=>window\n+    media: string[] = [\"max-width\"]\n+    pixels: number[] = [800]\n+    interval: any\n+    mediaElementFunc = () => window\n     styleon = {}\n     styleoff = {}\n-    onMedia = (_HOC:BaseHOC) => {}\n-    offMedia = (_HOC:BaseHOC) => {}\n+    protected onMedia = (_HOC: BaseHOC | undefined =undefined) => { }\n+    protected offMedia = (_HOC: BaseHOC | undefined=undefined) => { }\n     hasOnMedia = false\n     hasOffMedia = false\n-    hoc:BaseHOC\n-    listMedia:string[] = []\n-    determinant:string ='and'\n-    aliveTest = (_media:AtMedia) =>{}\n-    constructor(hoc:BaseHOC,{media = (\"max-width\" as string | string[]),determinant = \"and\",test = (_media:AtMedia)=>{},pixels = (800 as number | number[]),mediaElementFunc = ()=>window ,styleon = {},styleoff = {},onMedia = (_HOC:BaseHOC) => {},offMedia = (_HOC:BaseHOC) => {}} = {}){\n-        this.media = typeof(media) == \"string\" ?[media]:media\n+    hoc: BaseHOC\n+    listMedia: string[] = []\n+    determinant: string = 'and'\n+    aliveTest = (_media: AtMedia) => { }\n+    constructor(hoc: BaseHOC, { media = (\"max-width\" as string | string[]), determinant = \"and\", test = (_media: AtMedia) => { }, pixels = (800 as number | number[]), mediaElementFunc = () => window, styleon = {}, styleoff = {}, onMedia = (_HOC: BaseHOC | undefined) => { }, offMedia = (_HOC: BaseHOC | undefined) => { } } = {}) {\n+        this.media = typeof (media) == \"string\" ? [media] : media\n         this.mediaElementFunc = mediaElementFunc\n         this.styleoff = styleoff\n         this.styleon = styleon\n-        this.pixels = typeof(pixels) == \"number\" ?[pixels]:pixels\n+        this.pixels = typeof (pixels) == \"number\" ? [pixels] : pixels\n         this.onMedia = onMedia\n         this.offMedia = offMedia\n         this.hoc = hoc\n         this.determinant = determinant\n         this.aliveTest = test\n     }\n-    Destroy (){\n+    Destroy() {\n         this.isDestroyed = true\n     }\n \n-    Pause(){\n+    Pause() {\n         this.isPaused = true\n     }\n+    call_onMedia(){\n+        this.onMedia(this.hoc)\n+        this.hasOffMedia = false\n+        this.hasOnMedia = true\n+\n+    }\n+    call_offMedia(){\n+        this.offMedia(this.hoc)\n+        this.hasOnMedia = false\n+        this.hasOffMedia = true\n+    }\n \n-    Continue(){\n+    Continue() {\n         this.isPaused = false\n     }\n+    get at_media() {\n+        return this.hasOnMedia\n+    }\n+    Activate() {\n+        //  const runner =()=>{\n+        if (this.isDestroyed) {\n+            this.isDestroyed = false\n+        } else {\n+            requestAnimationFrame(()=>this.Activate())\n+        }\n+        this.hoc.Execute(() => {\n+            const mediaer = this.mediaElementFunc()\n+            if (!this.isPaused) {\n+                this.listMedia = []\n+                for (var idx in this.media) {\n+                    this.listMedia.push(`(${this.media[idx]}:${this.pixels[idx] || this.pixels[Number(idx) - 1] || this.pixels[0]}px)`)\n \n-    Activate(){\n-        this.interval = setInterval(() => {\n-            this.hoc.Execute(()=>{\n-                if (this.isDestroyed){\n-                    clearInterval(this.interval)\n-                    this.isDestroyed = false\n                 }\n-                const mediaer = this.mediaElementFunc()\n-                if (!this.isPaused){\n-                    this.listMedia = []\n-                    for (var idx in this.media){\n-                        this.listMedia.push(`(${this.media[idx]}:${this.pixels[idx] || this.pixels[Number(idx)-1] || this.pixels[0]}px)`)\n-                        \n-                    }\n+                // console.log(this.stringMedia)\n+                this.aliveTest(this)\n+                if (this.listMedia[this.determinant.toLowerCase() == \"and\" ? \"every\" : \"some\"]((stringMedia: string) => mediaer.matchMedia(stringMedia).matches)) {\n                     // console.log(this.stringMedia)\n-                     this.aliveTest(this)\n-                    if (this.listMedia[this.determinant.toLowerCase() == \"and\"?\"every\":\"some\"]((stringMedia:string)=>mediaer.matchMedia(stringMedia).matches)) {\n-                        // console.log(this.stringMedia)\n-                        if (!this.hasOnMedia){\n-                            this.onMedia(this.hoc)\n-                            this.hasOffMedia = false\n-                            this.hasOnMedia = true\n-                        }\n-                        for (const key of Object.keys(this.styleon)) {\n-                            (this.hoc as any).style[(key)]((this.styleon as any)[(key)]);\n-                            // console.log(`[${this.styleon[key]}] ${this.style[key]()}`)\n-                        }\n-                    } else {\n-                        if (!this.hasOffMedia){\n-                            this.offMedia(this.hoc)\n-                            this.hasOnMedia = false\n-                            this.hasOffMedia = true\n-                        }\n-                        for (const key of Object.keys(this.styleoff)) {\n-                            (this.hoc as any).style[(key)]((this.styleoff as any)[(key)]);\n-                            // console.log(`[${styleoff[key]}] ${this.style[key]()}`)\n-                        }\n+                    if (!this.hasOnMedia) {\n+                        this.call_onMedia()\n+                    }\n+                    for (const key of Object.keys(this.styleon)) {\n+                        (this.hoc as any).style[(key)]((this.styleon as any)[(key)]);\n+                        // console.log(`[${this.styleon[key]}] ${this.style[key]()}`)\n+                    }\n+                } else {\n+                    if (!this.hasOffMedia) {\n+                        this.call_offMedia()\n+                    }\n+                    for (const key of Object.keys(this.styleoff)) {\n+                        (this.hoc as any).style[(key)]((this.styleoff as any)[(key)]);\n+                        // console.log(`[${styleoff[key]}] ${this.style[key]()}`)\n                     }\n                 }\n-            })\n-        },1)\n+            }\n+        })\n+\n+        //     };\n+        // runner()\n     }\n }\n \n@@ -497,17 +536,18 @@ export class AtMedia{\n \n \n export var HOCS = {\n-    \n+\n }\n-export class InputHOC extends BaseHOC<React.InputHTMLAttributes<HTMLInputElement>,HTMLInputElement>{\n+export class InputHOC extends BaseHOC<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n     protected InitComponent(_Component: FC): React.FC {\n         return Input\n     }\n-    value(val?:string){\n-        if (this.Element){\n-            if (val){\n-                this.Element.value = val}\n-            else{\n+    value(val?: string) {\n+        if (this.Element) {\n+            if (val) {\n+                this.Element.value = val\n+            }\n+            else {\n                 return this.Element.value\n             }\n         }\n@@ -518,24 +558,24 @@ export class InputHOC extends BaseHOC<React.InputHTMLAttributes<HTMLInputElement\n \n \n \n-export class AnchorHOC extends BaseHOC<React.AnchorHTMLAttributes<HTMLAnchorElement>,HTMLAnchorElement>{}\n-export class LinkHOC extends BaseHOC<React.LinkHTMLAttributes<HTMLLinkElement>,HTMLLinkElement>{}\n-export class VideoHOC extends BaseHOC<React.VideoHTMLAttributes<HTMLVideoElement>,HTMLVideoElement>{}\n-export class AudioHOC extends BaseHOC<React.AudioHTMLAttributes<HTMLAudioElement>,HTMLAudioElement>{}\n-export class ImageHOC extends BaseHOC<React.ImgHTMLAttributes<HTMLImageElement>,HTMLImageElement>{}\n-export class TextAreaHOC extends InputHOC{\n+export class AnchorHOC extends BaseHOC<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement> { }\n+export class LinkHOC extends BaseHOC<React.LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement> { }\n+export class VideoHOC extends BaseHOC<React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement> { }\n+export class AudioHOC extends BaseHOC<React.AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement> { }\n+export class ImageHOC extends BaseHOC<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> { }\n+export class TextAreaHOC extends InputHOC {\n     protected InitComponent(_Component: FC): React.FC {\n         return TextArea\n     }\n }\n \n-    \n-export class InputSpiritHOC extends SpiritHOC<React.InputHTMLAttributes<HTMLInputElement>,HTMLInputElement>{\n+\n+export class InputSpiritHOC extends SpiritHOC<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n     protected initHOC(_HOC: typeof BaseHOC) {\n         return InputHOC as any\n     }\n }\n \n \n-export const rootdata = new DataSaver(ROOTDATA_IDENTIFIER,undefined)\n+export const rootdata = new DataSaver(ROOTDATA_IDENTIFIER, undefined)\n export const rootlnr = new XListener(ROOTLNR_IDENTIFIER)\n\\ No newline at end of file\ndiff --git a/alerter.tsx b/alerter.tsx\nindex 91bb14f..5ff6391 100644\n--- a/alerter.tsx\n+++ b/alerter.tsx\n@@ -1,15 +1,15 @@\n \"use client\"\n import { dict, useStateUpdate } from \"./anys\";\n import BaseHOC from \"./HOC\";\n-import { BaseElementProps, Div, EButton } from \"./csml\";\n+import { BaseElementProps, CTextArea, Div, EButton, TextArea } from \"./csml\";\n import { DocumentAddStyle, ICssHelper } from \"./css\";\n-import {  ReactNode } from \"react\";\n+import {  ReactNode, useEffect } from \"react\";\n import HeadWind from \"./cwind\";\n // import DataSaver from \"./DataSaver\";\n import CWind from \"./cwind\";\n import XListener from \"./ExtensibleListener\";\n \n-type DictButton = {innerText:ReactNode} & BaseElementProps<HTMLDivElement>\n+type DictButton = {innerText?:ReactNode} & BaseElementProps<HTMLDivElement>\n const LoadifyBootstrapActivate = ()=>{\n     DocumentAddStyle(`    \n         .loadingIcon { width: 50px; aspect-ratio: 1; display: grid; color: #ffffff; background: radial-gradient(farthest-side, currentColor calc(100% - 6px),#0000 calc(100% - 5px) 0); -webkit-mask: radial-gradient(farthest-side,#0000 calc(100% - 13px),#000 calc(100% - 12px)); border-radius: 50%; animation: l19 2s infinite linear; } \n@@ -177,6 +177,7 @@ export default class Alerter{\n         this.previousAlert = \"ALERT\"\n     }\n \n+\n     Iconify(com:ReactNode,buttons:DictButton[] = [],tapParentToClose?:boolean){\n         if (this.remote){\n             this.rootlnr.Announce(`${this.remote}.iconify`,{data:{text:com}})\n@@ -186,6 +187,27 @@ export default class Alerter{\n         this.previousAlert = \"ICONIFY\"\n        \n     }\n+    Input({text = \"\" as ReactNode,button = {} as DictButton \n+    ,props= {} as BaseElementProps<HTMLDivElement>,cancel = {}as DictButton, valuer =()=>\"\"}){\n+        const btn = {innerText:\"Continue\",fontWeight:\"bold\",...button}\n+        const Element = ()=>{\n+                const input = new BaseHOC({Component:CTextArea})\n+                useEffect(()=>{input.Execute(el=>{\n+                        el.innerText = valuer()\n+                    })})\n+                return <Div width=\"100%\" boxSizing=\"border-box\" {...CWind.FlexColumnAllCenter(\"10px\")} overflow=\"hidden\" >\n+                <Div width=\"100%\" overflowWrap=\"break-word\">{text}</Div>\n+            <Div width=\"100%\" boxSizing=\"border-box\">\n+                <input._  contentEditable width=\"100%\" backgroundColor=\"rgba(86, 86, 86, 0.64)\"  padding=\"10px\" borderRadius=\"5px\" boxSizing=\"border-box\" outline=\"none\" border=\"none\" minHeight=\"70px\" maxHeight=\"200px\" {...props}>{props.children}</input._ >\n+            </Div></Div>}\n+        this.Iconify(\n+            <Element/>\n+        ,[{\n+            ...btn,\n+            innerText:\"Cancel\",\n+            ...cancel\n+        },btn],true)\n+    }\n \n     Loadify(text?:ReactNode,{className,loadifyWrapperStyle = {gap:\"20px\"},style = {background:\"transparent\"}}:{className?:string ,style?:ICssHelper,loadifyWrapperStyle?:ICssHelper} = {}){\n         if (this.remote){\n@@ -210,7 +232,7 @@ export default class Alerter{\n         this.update = update\n         \n         // console.log(this.update)\n-        return <this.wrapper._ comment=\"Alerter\"  background=\"rgba(0,0,0,0.7)\" backdropFilter=\"blur(10px)\" {...(this.wrapperStyle as dict)} position=\"fixed\" width=\"100vw\" height=\"100vh\" top=\"0\" left=\"0\"  zIndex=\"1000\" display={this.display} placeItems=\"center\" onClick={\n+        return <this.wrapper._ comment=\"Alerter\"  background=\"rgba(0,0,0,0.7)\" backdropFilter=\"blur(10px)\" {...(this.wrapperStyle as dict)} position=\"fixed\" width=\"100vw\" height=\"100vh\" top=\"0\" left=\"0\"  zIndex=\"1000\" display={this.display as any} placeItems=\"center\" onClick={\n             (e)=>{\n                 this.wrapper.Execute((element)=>{\n                     if (e.target == element){\ndiff --git a/css.ts b/css.ts\nindex 6aa03dd..34f9ba3 100644\n--- a/css.ts\n+++ b/css.ts\n@@ -811,7 +811,7 @@ export type ICssHelper = {\n         d?:string\n         descentOverride?:string\n         direction?:string\n-        display?:string\n+        display?:\"flex\" | \"grid\" | \"block\" | \"none\" | \"inline\"\n         dominantBaseline?:string\n         emptyCells?:string\n         fallback?:string\n@@ -1117,7 +1117,7 @@ export type ICssHelper = {\n         transitionDuration?:string\n         transitionProperty?:string\n         transitionTimingFunction?:string\n-        translate?:string\n+        translate?:string | any\n         types?:string\n         unicodeBidi?:string\n         unicodeRange?:string\ndiff --git a/ctsx.tsx b/ctsx.tsx\nindex 6c330a0..733ad32 100644\n--- a/ctsx.tsx\n+++ b/ctsx.tsx\n@@ -226,3 +226,10 @@ export const Hidden:FC<BaseElementProps<HTMLDivElement>> = function (props){\n       {props.children}\n   </Div>\n }\n+\n+export const CTextArea:FC<BaseElementProps<HTMLDivElement>> = function (props:BaseElementProps<HTMLDivElement>&{value?:string}){\n+\n+  return <Div textAlign=\"left\" minHeight=\"60px\" height=\"fit-content\" overflow=\"hidden\" color=\"white\" backgroundColor=\"rgba(79, 79, 79, 1)\" overflowY=\"auto\" overflowX=\"hidden\" {...props}>\n+    <Div textAlign=\"inherit\" contentEditable width=\"100%\" height=\"100%\" display=\"inline\" gap=\"0\" dangerouslySetInnerHTML={{__html:props.value as any}}></Div>\n+  </Div>\n+}\n\\ No newline at end of file\ndiff --git a/cwind.ts b/cwind.ts\nindex 5b079cb..308dfc3 100644\n--- a/cwind.ts\n+++ b/cwind.ts\n@@ -1,5 +1,6 @@\n // import { ICssHelper } from \"./css\";\n import {  pairIf } from \"./anys\";\n+import { ICssHelper } from \"./css\";\n \n \n \n@@ -32,14 +33,14 @@ import {  pairIf } from \"./anys\";\n             ...pairIf(\"gap\",gap),\n             display:\"flex\",\n             flexDirection:\"row\",\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexColumn(gap?:string){\n         return {\n             ...pairIf(\"gap\",gap),\n             display:\"flex\",\n             flexDirection:\"column\",\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexRowAllCenter(gap?:string){\n         return {\n@@ -48,7 +49,7 @@ import {  pairIf } from \"./anys\";\n             flexDirection:\"row\",\n             justifyContent:\"center\",\n             alignItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexColumnAllCenter(gap?:string){\n         return {\n@@ -57,7 +58,7 @@ import {  pairIf } from \"./anys\";\n             flexDirection:\"column\",\n             justifyContent:\"center\",\n             alignItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexColumnJustifyCenter(gap?:string){\n         return {\n@@ -65,7 +66,7 @@ import {  pairIf } from \"./anys\";\n             display:\"flex\",\n             flexDirection:\"column\",\n             justifyContent:\"center\",\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexColumnAlignCenter(gap?:string){\n         return {\n@@ -73,7 +74,7 @@ import {  pairIf } from \"./anys\";\n             display:\"flex\",\n             flexDirection:\"column\",\n             alignItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexRowJustifyCenter(gap?:string){\n         return {\n@@ -81,7 +82,7 @@ import {  pairIf } from \"./anys\";\n             display:\"flex\",\n             flexDirection:\"row\",\n             justifyContent:\"center\",\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexRowAlignCenter(gap?:string){\n         return {\n@@ -89,7 +90,7 @@ import {  pairIf } from \"./anys\";\n             display:\"flex\",\n             flexDirection:\"row\",\n             alignItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexRowJustifyBetween(gap?:string){\n         return {\n@@ -97,7 +98,7 @@ import {  pairIf } from \"./anys\";\n             display:\"flex\",\n             flexDirection:\"row\",\n             justifyContent:\"space-between\",\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexColumnJustifyBetween(gap?:string){\n         return {\n@@ -105,7 +106,7 @@ import {  pairIf } from \"./anys\";\n             display:\"flex\",\n             flexDirection:\"column\",\n             justifyContent:\"space-between\",\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexRowAlignCenterJustifyBetween(gap?:string){\n         return {\n@@ -114,7 +115,7 @@ import {  pairIf } from \"./anys\";\n             flexDirection:\"row\",\n             justifyContent:\"space-between\",\n             alignItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexColumnAlignCenterJustifyBetween(gap?:string){\n         return {\n@@ -123,7 +124,7 @@ import {  pairIf } from \"./anys\";\n             flexDirection:\"column\",\n             justifyContent:\"space-between\",\n             alignItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexRowJustifyEnd(gap?:string){\n         return {\n@@ -131,7 +132,7 @@ import {  pairIf } from \"./anys\";\n             display:\"flex\",\n             flexDirection:\"row\",\n             justifyContent:\"end\",\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexColumnJustifyEnd(gap?:string){\n         return {\n@@ -139,7 +140,7 @@ import {  pairIf } from \"./anys\";\n             display:\"flex\",\n             flexDirection:\"column\",\n             justifyContent:\"end\",\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexRowAlignCenterJustifyEnd(gap?:string){\n         return {\n@@ -148,7 +149,7 @@ import {  pairIf } from \"./anys\";\n             flexDirection:\"row\",\n             justifyContent:\"end\",\n             alignItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexColumnAlignCenterJustifyEnd(gap?:string){\n         return {\n@@ -157,7 +158,7 @@ import {  pairIf } from \"./anys\";\n             flexDirection:\"column\",\n             justifyContent:\"end\",\n             alignItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexRowJustifyAround(gap?:string){\n         return {\n@@ -165,7 +166,7 @@ import {  pairIf } from \"./anys\";\n             display:\"flex\",\n             flexDirection:\"row\",\n             justifyContent:\"space-around\",\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexColumnJustifyAround(gap?:string){\n         return {\n@@ -173,7 +174,7 @@ import {  pairIf } from \"./anys\";\n             display:\"flex\",\n             flexDirection:\"column\",\n             justifyContent:\"space-around\",\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexRowAlignCenterJustifyAround(gap?:string){\n         return {\n@@ -182,7 +183,7 @@ import {  pairIf } from \"./anys\";\n             flexDirection:\"row\",\n             justifyContent:\"space-around\",\n             alignItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n     export function  FlexColumnAlignCenterJustifyAround(gap?:string){\n         return {\n@@ -191,7 +192,7 @@ import {  pairIf } from \"./anys\";\n             flexDirection:\"column\",\n             justifyContent:\"space-around\",\n             alignItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n \n     // # Grid\n@@ -200,7 +201,7 @@ import {  pairIf } from \"./anys\";\n             ...pairIf(\"gap\",gap),\n             display:\"grid\",\n             gridTemplateRows:gridTemplateRows,\n-        } \n+        } as ICssHelper\n     }\n     export function GridRowCenter(gridTemplateRows:string,gap?:string){\n         return {\n@@ -208,7 +209,7 @@ import {  pairIf } from \"./anys\";\n             display:\"grid\",\n             gridTemplateRows:gridTemplateRows,\n             placeItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n \n     export function GridColumn(gridTemplateColumns:string,gap?:string){\n@@ -216,7 +217,7 @@ import {  pairIf } from \"./anys\";\n             ...pairIf(\"gap\",gap),\n             display:\"grid\",\n             gridTemplateColumns:gridTemplateColumns,\n-        } \n+        } as ICssHelper\n     }\n     export function GridColumnCenter(gridTemplateColumns:string,gap?:string){\n         return {\n@@ -224,7 +225,7 @@ import {  pairIf } from \"./anys\";\n             display:\"grid\",\n             gridTemplateColumns:gridTemplateColumns,\n             placeItems:\"center\"\n-        } \n+        } as ICssHelper\n     }\n     export function GridColumnAutoFitMinMax(minmax:string = \"250px , 1fr\",gap?:string){\n         return {\n@@ -241,6 +242,11 @@ import {  pairIf } from \"./anys\";\n             placeItems:\"center\"\n         }\n     }\n+    export function Iconify(size:number){\n+    return {...GridColumnCenter(\"\")\n+        ,...Square(`${size}px`),\n+        borderRadius:\"50%\"} as ICssHelper \n+    }\n     export function GridRowAutoFitMinMax(minmax:string = \"250px , 1fr\",gap?:string){\n         return {\n             ...pairIf(\"gap\",gap),\n@@ -254,7 +260,7 @@ import {  pairIf } from \"./anys\";\n             display:\"grid\",\n             gridTemplateRows:`repeat(auto-fit, minmax(${minmax})`,\n             placeItems:\"center\"\n-        }\n+        } as ICssHelper\n     }\n \n     export function bg(val:string){\n@@ -268,13 +274,13 @@ import {  pairIf } from \"./anys\";\n         return{\n             overflowX:\"hidden\",\n             overflowY: overflowY\n-        } \n+        } as ICssHelper\n     }\n     export function OverflowOnlyX(overflowX:string = \"auto\"){\n         return{\n             overflowY:\"hidden\",\n             overflowX: overflowX\n-        } \n+        } as ICssHelper\n     }\n \n     export function TransitionMerge(names:string[], transition:string){\ndiff --git a/designer/glass.ts b/designer/glass.ts\nindex 0817c14..4ab1beb 100644\n--- a/designer/glass.ts\n+++ b/designer/glass.ts\n@@ -18,7 +18,6 @@ export namespace glass{\n     export const blue:any = glass({r:0,g:10,b:255,op:9,bdo:12});\n     export const red:any = glass({r:255,g:10,b:0,op:16,bdo:14});\n     export const green:any = glass({r:10,g:255,b:10,op:9,bdo:14});\n-\n     \n }\n </GIT_DIFF>"
        },
        {
            "CYPERX": "response='Adding, committing, and pushing changes to your repository. Then, changing the directory to the specified path.' execution_method=<EXECUTION_METHOD.AUTO: 'AUTO-EXECUTE'> actions=[Function(type=<ActionType.cmd: 'CMD'>, action=Action(FileNameIfTypeIsFileElseBlank='', ContentIfTypeIsFileElseCmdCommand='cd C:\\\\Users\\\\MC DESMOND\\\\dextop\\\\Kavari\\\\frontend\\\\src\\\\addons')), Function(type=<ActionType.cmd: 'CMD'>, action=Action(FileNameIfTypeIsFileElseBlank='', ContentIfTypeIsFileElseCmdCommand='git add .')), Function(type=<ActionType.cmd: 'CMD'>, action=Action(FileNameIfTypeIsFileElseBlank='', ContentIfTypeIsFileElseCmdCommand='git commit -m \"Updated HOC.tsx, alerter.tsx, css.ts, ctsx.tsx, cwind.ts, designer/glass.ts\"')), Function(type=<ActionType.cmd: 'CMD'>, action=Action(FileNameIfTypeIsFileElseBlank='', ContentIfTypeIsFileElseCmdCommand='git push'))]"
        },
        {
            "SYSTEM": "cd \"C:\\Users\\MC DESMOND\\dextop\\Kavari\\frontend\\src\\addons\\cyperx_output\""
        },
        {
            "SYSTEM": ""
        },
        {
            "SYSTEM": ""
        },
        {
            "SYSTEM": ""
        },
        {
            "SYSTEM": "cd C:\\Users\\MC DESMOND\\dextop\\Kavari\\frontend\\src\\addons"
        },
        {
            "SYSTEM": ""
        }
    ],
    "cyperx_voice": "en-AU-WilliamNeural",
    "mpt": false,
    "width": 70,
    "cyperx_output": "C:\\Users\\MC DESMOND\\dextop\\Kavari\\frontend\\src\\addons\\cyperx_output",
    "auto_start": false
}